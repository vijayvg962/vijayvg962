pipeline{
    agent any
       tools {
          maven 'maven3'
}
    stages{
        stage("Git Checkout"){
            steps{
                git branch: 'master', credentialsId: 'git', url: 'https://github.com/dilliprakash/my-app'
                
            }
        }
        stage("maven build"){
            steps{
                sh 'mvn clean package'
        }
    }
        stage("docker build"){
            steps{
                script{
                    tag = dockerTag()
                    echo "Hello ${tag}"
                    sh "docker build . -t dilliprakash/devops:${tag}"
            }
        }
    }
        stage("upload to docker"){
            steps{
                withCredentials([string(credentialsId: 'dockerPwd2', variable: 'dockerpass1')]) {
                    script{
                        def tag = dockerTag()
                        sh "docker login -u dilliprakash -p ${dockerpass1}"
                        sh "docker push dilliprakash/devops:${tag}"
                }
            }
        }
    }
        stage("remove old containers"){
            steps{
                sshagent(['docker-dev']) {
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.38.47 docker rm -f dilluapp"
                    sh "ssh ec2-user@172.31.38.47 docker image prune -a -f" 
                }
                
            }
        }
        stage("deploy to dev"){
            steps{
                sshagent(['docker-dev']) {
                sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.38.47 docker run -d -p 8080:8080 --name dilluapp dilliprakash/devops:${tag}"
            }
           
}
        }
    }
}
def dockerTag(){
    return sh(returnStdout: true, script: 'git rev-parse --short HEAD')
}